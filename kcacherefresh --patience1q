[1mdiff --git a/apps/backend-wrkr/src/worker-svc.ts b/apps/backend-wrkr/src/worker-svc.ts[m
[1mindex 73f2ab4..0458ce0 100644[m
[1m--- a/apps/backend-wrkr/src/worker-svc.ts[m
[1m+++ b/apps/backend-wrkr/src/worker-svc.ts[m
[36m@@ -14,30 +14,40 @@[m [mconst redisConfig:RedisServiceConfig= {[m
     }[m
 };[m
 [m
[32m+[m[32mconst redisLoggerSvc:LoggingService =  createLoggerSvc({[m
[32m+[m[32m    env:'dev',[m
[32m+[m[32m    type:'both',[m
[32m+[m[32m    filename:'redis'[m
[32m+[m[32m});[m
[32m+[m[32mconst redisSvc:RedisService = createRedisSvc(redisConfig, redisLoggerSvc);[m[41m [m
[32m+[m
 [m
 const loggingOptions:LoggingServiceConfigOptions = {[m
     env:'dev',[m
[32m+[m[32m    filename:'worker-svc.log',[m
     type:'both',[m
     level:'debug',[m
[31m-    maxLogSize:10000,[m
[32m+[m[32m    maxLogSize:'10K',[m
     backups:2,[m
     compress:true[m
 }[m
 [m
[31m-const wrkrLoggerSvc:LoggingService = createLoggerSvc(loggingOptions);[m
[31m-const redisSvc:RedisService = createRedisSvc(redisConfig, wrkrLoggerSvc); [m
[31m-const workerLogger = wrkrLoggerSvc.getLogger('worker-svc');[m
[31m-    [m
[32m+[m[32mconst logger:LoggingService = createLoggerSvc(loggingOptions);[m
[32m+[m[32mconst workerLogger = logger.getLogger('worker');[m
 [m
[31m-const channels:string[] = ['ticker:cik'][m
[31m-redisSvc.getSubscriberClient().on('connect', ()=> {[m
 [m
[32m+[m[32mconst channels:string[] = ['ticker'][m
[32m+[m
[32m+[m[32mredisSvc.getSubscriberClient().on('connect', ()=> {[m
     workerLogger.debug('redis has connected in subscriber mode');[m
 [m
     redisSvc.getSubscriberClient().subscribe(...channels, (err, count)=> {[m
[31m-        workerLogger.debug(`Subscribing to ${count} channels`);        [m
[32m+[m[32m        workerLogger.debug(`Subscribing to ${count} channels`);[m
[32m+[m
[32m+[m[41m        [m
     });[m
 [m
[32m+[m
     redisSvc.getSubscriberClient().on('message', (channel, message)=> {[m
         workerLogger.debug(`Got a message from  ${channel} :  ${message}`);[m
     })[m
[1mdiff --git a/packages/shared-utils/src/disk-cache/cachesvc.types.ts b/packages/shared-utils/src/disk-cache/cachesvc.types.ts[m
[1mindex fd2903e..43c1056 100644[m
[1m--- a/packages/shared-utils/src/disk-cache/cachesvc.types.ts[m
[1m+++ b/packages/shared-utils/src/disk-cache/cachesvc.types.ts[m
[36m@@ -9,8 +9,8 @@[m
  * */[m
 [m
 export interface CacheSvcConfig {[m
[31m-    cacheBaseDir:string;  [m
[31m-    maxCacheWriteRetry:number;  [m
[32m+[m[32m    cacheBaseDir:string|"finalysis-app";[m[41m  [m
[32m+[m[32m    maxCacheWriteRetry:number|2;[m[41m  [m
 }[m
 [m
 export interface CacheSvc {[m
